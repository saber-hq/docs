"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[710],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4924:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return c},toc:function(){return u},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={sidebar_position:2},s="The Saber Registry",p={unversionedId:"developing/registry",id:"developing/registry",title:"The Saber Registry",description:"The Saber Registry is an automatically generated JSON list of all Saber pools. It contains metadata not present on-chain which may be useful if displaying pool information.",source:"@site/docs/developing/registry.md",sourceDirName:"developing",slug:"/developing/registry",permalink:"/docs/developing/registry",editUrl:"https://github.com/saber-hq/docs/tree/master/docs/developing/registry.md",tags:[],version:"current",lastUpdatedBy:"Ian Macalinao",lastUpdatedAt:1646172631,formattedLastUpdatedAt:"3/1/2022",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/developing/overview"},next:{title:"Decimal Wrapped Tokens",permalink:"/docs/developing/decimal-wrappers"}},c={},u=[{value:"Pools List",id:"pools-list",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-saber-registry"},"The Saber Registry"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://registry.saber.so/"},"Saber Registry")," is an automatically generated JSON list of all Saber pools. It contains metadata not present on-chain which may be useful if displaying pool information."),(0,i.kt)("h2",{id:"pools-list"},"Pools List"),(0,i.kt)("p",null,"The pools list is available at ",(0,i.kt)("a",{parentName:"p",href:"https://registry.saber.so/data/pools-info.mainnet.json"},"https://registry.saber.so/data/pools-info.mainnet.json"),"."),(0,i.kt)("p",null,"The list contains the following info for each pool:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id"),": the unique user-friendly ID of the pool, used in the URL"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokens"),": the tokens backing the pool"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tokenIcons"),": the tokens backing the pool in the order that they should be rendered. E.g. USDC-USDT should be rendered as USDT-USDC."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"underlyingIcons"),": the ",(0,i.kt)("inlineCode",{parentName:"li"},"tokenIcons"),", unwrapped for their underlying assets. This is generally only different than ",(0,i.kt)("inlineCode",{parentName:"li"},"tokenIcons")," for ",(0,i.kt)("a",{parentName:"li",href:"./decimal-wrappers"},"decimal wrapped tokens"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"currency"),": the currency category of the pool, all uppercase. A pool generally only trades against other pools with the same currency."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lpToken"),": token information of the LP token."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plotKey"),": Deprecated. This is the key of the Plot in the old Saber farming system."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"swap"),": The swap config and state."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"quarry"),": Key of the ",(0,i.kt)("a",{parentName:"li",href:"https://quarry.so"},"Quarry")," associated with the official Saber liquidity mining program.")))}f.isMDXComponent=!0}}]);